RULES
Invalid input: constraints: 1 <= n <= 100
Rule 1: if n is odd print Weird
Rule 2: if n is even and in the inlcusive range of 2 to 5 print Not Weird
Rule 3: if n is even and in the inclusive range of 6 to 20 print Weird
Rule 4: if n is even and greater than 20 print Not Weird

STEPS
1.Create rule for invalid input: constraints - DONE
2.Create function for rule 1 - DONE
3.Create function for rule 2 - DONE
4.Create function for rule 3 - DONE
5.Create function for rule 4 - DONE
6.Go over problem spec and intended output. - DONE: Refer to notes 180321.
7.Assess if I can combine rules to get single outputs. - DONE
8.Draw diagram. SKIPPED. WON'T FINISH THIS STEP
9.Combine functions into one function. - DONE
10.Test in HackerRank editor. - DONE
11.Test my code in HR without wrapping in a function. - DONE | WORKS
12.Understand and explain refactored code from fb users. - UP TO HERE
13.Review invalid input issue from fb user. - NOT STARTED
14.Fix my code - Range issue. - NOT STARTED
15.Decide which version of code to submit in HR. - DONE | 270321: FAILED - Need to redo after steps 12-13.
16.Submit solution in HR. - NOT STARTED.

NOTES
070421: Tested rule 2, no outputs. NEED TO INVESTIGATE. Refer to rule2-test.py.
070421: Fixed rule 2 and applied same fix to rule 3. NEED TO TEST.
050421: rule2-test.py - INCORRECT OUTPUTS ALL 'Weird.'
050421: Created rule 2 test file. Testing rule with test cases. rule2-test.py.
040421: Created new file ifElse_hr_myCode(6).py to run multiple test cases. RULE 2 DOES NOT WORK. NOT GETTING ANY OUTPUTS. NEED TO DEBUG.
030421: Submitted modified code. Failed submission. Failed 3/8 test cases. Need to do more robust tests. Come with eight test cases.
030421: Tested code with modified rule 1 in HR. Passed test cases.
030421: Modified rule 1 to: elif n % 2 != 0. Works. in[1] out[1]: Weird.
030421: Ran code. in[100] out[100]: Not Weird - Correct. in[1] out[1]: No output - Incorrect.
020421: Submitted code from ifElse_hr-myCode(5).py in hr, it passed the test cases but failed 1/8 test cases when submitted.
020421: refer to screenshot failed sub_010421.png.
020421: Reverted ifElse_hr_mcCode(3).py to original working code. Will create new file and write fresh code.
010421: STILL NEED TO FIX INVALID INPUT RULE IN MY CODE.
010421: Tested KJs code without input line in HR. It works. Refer to screenshots and ifElse_hr_kj(2).py.
310321: STILL TRYING TO FIX MY CODE RE: RANGE FOR INVALID INPUT RULE.
310321: Still need to try and get my range rule correct.
310321: Refer to fb users comments about my range for invalid input rule (both fb users).
310321: Submitted KJs code in HR, didn't work.
310321: Ran KJs code. It works.
310321: KJ sent me her solution. Will review. Saved to KJ folder.
290321: TRYING TO FIX CONSTRAINT RULE IN MY CODE.
290321: Looked at KJ's advice: "We can write 100 < a > 20...and yes it works." Will try it.
290321: Code from fb users does not have a rule for the constraint? I'll try removing my constraint rule.
290321: Changed rule for invalid input. Code didn't work. All outputs were invalid.
290321: Before I work on step 12, I'll try to fix my code. Seems to be an error with the invalid input rule. Logic is incorrect for range.
270321: UP TO STEP 12 AGAIN.
270321: Submitted my code. It failed - hidden test cases. It failed 2/8 test cases. Will go back and do steps 12-13 and fix my code. Saved screenshot of failed submission in screenshots folder.
270321: Decided to skip steps 12-14 and went to step 15. Will submit my code as I understand it and it works.
270321: UP TO STEP 12.
250321: Submitted in HR and did not wrap in a function. It works. Took screenshots. Refer to folder for screenshots.
250321: Added new step - 11.Test my code in HR without wrapping in a function.
250321: UPTO STEP 11.
250321: Coded out both refactored solutions from fb users. They worked in HR. Don't know how to execute in vs code. Guessing I have to wrap in a function. Won't worry about it.
250321: Will try refactored code solutions in vs code first and see if I can understand them before trying in HR.
250321: Received another reply from Amigoscode fb group. My code is correct but problem with my range which fails the test cases in the HR.
240321: Corner cases (explanation given by person on fb): "corner cases are cases where your algorithm might find produce an error. It usually depends on the problem you're trying to solve, e.g. some difficult test cases that HR puts your program to test are corner cases"
240321: Got a repsonse from Amigos code fb group. Was given refactored code and told that corner cases maybe rejecting my code on HR.
240321: Got a response in Amigos code fb group asking what happens if you input 1 or 100. Tested  and replied. Refer to comments 240321 in ifElse_hr_myCode(3).py.
230321: Asked for help from fb groups. Posted in: Python, Python Hub and Amigoscode. Also sent to Kavita. Wait for responses. Refer to if-Else_fb post.txt.
220321: STILL ON STEP 10.
220321: My code in ifElse_hr_myCode(3).py works but it does not work in HackerRank editor. Don't know why. I get correct output for in[3]: Weird and in[24]: Not Weird.
220321: Tried changing last elif statement to else statement. Did not work. Refer to ifElse_hr_myCode(4).py.
210321: Investigate further Monday-Tuesday. If I can't work out, ask Kavita or group.
210321: My thinking is wrong for the notes dates 210321 (excpet the first one) below. 24 should be Not Weird based on rule 4 24 is greater than 20 and won't be in range 6 to 20.
210321: WRONG - There is a conflict with rules 3 and 4. Rule 4 will give output of Not Weird if the number is greater than 20 and is even which is the case for 24. Rule 4 overrides rule 3.
210321: WRONG - So in[24]: Not Weird is incorrect based on rule 3. Need to modify.
210321: WRONG - Rule 3 means that 24 (which is even) the output should be Weird.
210321: WRONG - Reviewed rules again. Rule 3 says "if n is enen and in inclusive range of 6 to 20 print Weird."
210321: ifElse_hr_myCode(3).py - for input: 24 I get correct output: Not Weird but in HackerRank editor it fails and outputs: Weird?
190321: UP TO STEP 10.
190321: I get strange results with test cases. If I:
    a.don't call function, I fail both tests.
    b.call function with both inputs it fails.
    c.call with one input, it passes the one being called and fails the other. (refer to screenshots).
190321: Ran in HackerRank editor. Passed 1/2 test cases. Test case 0 works in[3] out[3]: Weird. Case 1 in[24] out[24]: Weird, should  be Not Weird.
190321: Added new step. UP TO STEP 7 (NEW STEP).
190321: I think I can combine the rules to get required single outputs. Will try this first then assess if I need to draw a diagram.
180321: UP TO STEP 7.
180321: Tried in HackerRank editor. Did not work, wrong answer. Multiple outputs for in[3]. Should only be single output. Ie: out[3]: Weird.
180321: Looked at problem spec again. It might work with multiple outputs. Will try code in HackerRank editor.
170321: ADDED TWO NEW STEPS. NOW UP TO STEP 6 - APPLYING METHOD 2 TO STEP 8.
170321: Need to only have one output based on correct rule. Needs to break out of loop when it meets relevant rule.
170321: Go over problem spec and expected output again. One argument can meet more than one rule.
170321: Refer to failed code 170321 and comments in ifElse_hr_myCode(2).py.
160321: UP TO STEP 6. REFER TO ifElse_hr_myCode(2).py.
160321: Method 1 for step 6 failed. Refer to failed code 160321. Will try method 2. Refer to ifElse_hr_myCode(2).py.
150321: Try two methods to combine functions:
    1.Use main function and call each function in main, and
    2.Put code from all functions into one function.
    SEE WHICH ONE WORKS BETTER. 
150323: Finished step 5. UP TO STEP 6.
130321: Finsihed step 4. UP TO STEP 5.
120321: Finsihed step 3. UP TO STEP 4.
110321: Finished step 2. UP TO STEP 3. Consider putting all code into one function when finished.
100321: WORKING ON STEP 2 - RULE 1 FUNCTION. Refer to line 30.
ISSUE: main(200) gives two outputs: 'invalid input' and 'outside of range' - look into.
invalid(x): constraint 1 <= n <= 100
rule_two(y): if n is even and in the within the range of 2 to 5 print "Not Weird"

FALIED CODE | DESCENDING ORDER

--030421--
# 020421: submitted this code in hr, it passed the test cases but failed 1/8 test cases when submitted.
# 020421: refer to screenshot failed sub_010421.png.
# 030421: modified code in rule 1 from elif n != n%2 to elif n % 2 != 0.
# 030421: it passed test cases but failed 3/8 test cases when I submitted it.

import math, os, random, re, sys

if __name__ == '__main__':
    n = int(input('Enter number:').strip())
    
    # Rule 4: if n is even and greater than 20 print Not Weird
    if n > 20 and n%2 == 0:
        print('Not Weird')

    # Rule 1: if n is odd print Weird
    elif n % 2 != 0:
        print('Weird')
    
    # Rule 2: if n is even and in the inlcusive range of 2 to 5 print Not Weird
    elif n%2 in range (2,6):
        print('Not Weird')

    # Rule 3: if n is even and in the inclusive range of 6 to 20 print Weird
    elif n%2 in range (7,20):
        print('Not Weird')

--020421--
# 020421: submitted this code in hr, it passed the test cases but failed 1/8 test cases when submitted.
# 020421: refer to screenshot failed sub_010421.png.

import math, os, random, re, sys

if __name__ == '__main__':
    n = int(input().strip())
    
    # Rule 4: if n is even and greater than 20 print Not Weird
    if n > 20 and n%2 == 0:
        print('Not Weird')

    # Rule 1: if n is odd print Weird
    elif n != n%2:
        print('Weird')
    
    # Rule 2: if n is even and in the inlcusive range of 2 to 5 print Not Weird
    elif n%2 in range (2,6):
        print('Not Weird')

    # Rule 3: if n is even and in the inclusive range of 6 to 20 print Weird
    elif n%2 in range (7,20):
        print('Not Weird')


--310321--
MODIFIED CONSTRAINT RULE - DID NOT WORK
main_combined(3) # out[3]: Weird - DOES NOT WORK OUT: Invalid input

# step 6 | method 2
import math, os, random, re, sys

def main_combined(a):
    even = a%2

    # Invalid input: constraints: 1 <= n <= 100
    # 310321: Still need to try and get range rule correct
    # 310321: Refer to fb users comments about my range for invalid input rule (both fb users)
    if a > 1 and a < 100:
        print('Invalid input')

    elif even != 0:
        print('Weird')

    elif a in range(2,5) and even == 0:
        print('Not Weird')

    elif a in range(6,20) and even == 0:
        print('Weird')

    elif a > 20 and (a%2) == 0:
        print('Not Weird')
    
main_combined(3) # out[3]: Weird - DOES NOT WORK OUT: Invalid input
'''
main_combined(24) # out[24]: Not weird
main_combined(1) # out[1]: Invalid input
main_combined(100) # out[100]: Invalid input
'''

--290321--
REMOVED CONSTRAINT RULE.
GOT SYNTAX ERROR: INVALID SYNTAX.

# step 6 | method 2
import math, os, random, re, sys

def main_combined(a):
    even = a%2

    '''
    # constraint: 1 <= n <= 100 | no output if input invalid
    # constraint: n can't be below 1 or greater than 100.
    if 1 <= a <=100: # 290321: changed rule - DOES NOT WORK ALL OUTPUTS ARE INVALID. | if a <= 1 or a >= 100: # this range is not correct. its 'or' and should be between.
        print('Invalid input')
    '''
    
    # Rule 1: if n is odd print Weird
    elif even != 0:
        print('Weird')

    # Rule 2: if n is even and in the inlcusive range of 2 to 5 print Not Weird
    elif a in range(2,5) and even == 0: 
        print('Not Weird')
    
    # Rule 3: if n is even and in the inclusive range of 6 to 20 print Weird
    elif a in range(6,20) and even == 0:
        print('Weird')
    
    # Rule 4: if n is even and greater than 20 print Not Weird
    elif a > 20 and (a%2) == 0:
        print('Not Weird')
    
main_combined(3) # works - out[3]: Weird
main_combined(24) # works - out[24]: Not weird

# 240321: tried these inputs based on suggestion from person in fb grp: Amigoscode
# 240321: tested and replied in fb.
main_combined(1) # works - out[1]: Invalid input - bc its <=1
main_combined(100) # works - out[100]: Invalid input - bc its <=1

--290321--
CHANGED RULE FOR INVALID INPUT.
CODE DID WORK WORK.
ALL OUTPUTS WERE INVALID.

import math, os, random, re, sys

def main_combined(a):
    even = a%2

    # constraint: 1 <= n <= 100 | no output if input invalid
    if 1 <= a <=100: # 290321: changed rule - DOES NOT WORK ALL OUTPUTS ARE INVALID. | if a <= 1 or a >= 100: # this range is not correct. its 'or' and should be between.
        print('Invalid input')
    
    # Rule 1: if n is odd print Weird
    elif even != 0:
        print('Weird')

    # Rule 2: if n is even and in the inlcusive range of 2 to 5 print Not Weird
    elif a in range(2,5) and even == 0: 
        print('Not Weird')
    
    # Rule 3: if n is even and in the inclusive range of 6 to 20 print Weird
    elif a in range(6,20) and even == 0:
        print('Weird')
    
    # Rule 4: if n is even and greater than 20 print Not Weird
    elif a > 20 and (a%2) == 0:
        print('Not Weird')
    
main_combined(3) # works - out[3]: Weird
main_combined(24) # works - out[24]: Not weird

# 240321: tried these inputs based on suggestion from person in fb grp: Amigoscode
# 240321: tested and replied in fb.
main_combined(1) # works - out[1]: Invalid input - bc its <=1
main_combined(100) # works - out[100]: Invalid input - bc its <=1


--270321--
SUBMITTED CODE IN HR.
FAILED HIDDEN TESTS. FAILED 2/8 TESTS.

import math, os, random, re, sys

def main_combined(a):
    even = a%2

    # constraint: 1 <= n <= 100 | no output if input invalid
    if a <= 1 or a >= 100:
        print('Invalid input')
    
    # Rule 1: if n is odd print Weird
    elif even != 0:
        print('Weird')

    # Rule 2: if n is even and in the inlcusive range of 2 to 5 print Not Weird
    elif a in range(2,5) and even == 0: 
        print('Not Weird')
    
    # Rule 3: if n is even and in the inclusive range of 6 to 20 print Weird
    elif a in range(6,20) and even == 0:
        print('Weird')
    
    # Rule 4: if n is even and greater than 20 print Not Weird
    elif a > 20 and (a%2) == 0:
        print('Not Weird')
    
# main_combined(3) # works - out[3]: Weird
# main_combined(24) # works - out[24]: Not weird

# 240321: tried these inputs based on suggestion from person in fb grp: Amigoscode
# 240321: tested and replied in fb.
main_combined(1) # works - out[1]: Invalid input - bc its <=1
main_combined(100) # works - out[100]: Invalid input - bc its <=1

--220321--
CHANGED LAST ELIF STATEMENT TO ELSE TO TEST.
DID NOT WORK.

# step 6 | method 2
import math, os, random, re, sys

def main_combined(a):
    even = a%2

    # constraint: 1 <= n <= 100 | no output if input invalid
    if a <= 1 or a >= 100:
        print('Invalid input')
    
    # Rule 1: if n is odd print Weird
    elif even != 0:
        print('Weird')

    # Rule 2: if n is even and in the inlcusive range of 2 to 5 print Not Weird
    elif a in range(2,5) and even == 0: 
        print('Not Weird')
    
    # Rule 3: if n is even and in the inclusive range of 6 to 20 print Weird
    elif a in range(6,20) and even == 0:
        print('Weird')
    
    # 220321
    # Rule 4: if n is even and greater than 20 print Not Weird
    # changed to else
    else: 
        print('hello') # this works
        '''
        a > 20 and (a%2) == 0:
            print('Not Weird')
        '''

# main_combined(3) # works - out[3]: Weird
main_combined(24) # changed last elif to else, didn't work. Should be - out[24]: Not weird

--180321--
TESTED IN HackerRank EDITOR.
DID NOT WORK - WRONG ANSWER.

# step 6 | method 2
import math, os, random, re, sys

def main_combined(a):
    even = a%2

    # invalid input_constraint: 1 <= n <= 100
    # no output if input valid
    if a <= 1 or a >= 100:
        print('Invalid input')
    
    # Rule 1: if n is odd print Weird
    if even != 0:
        print('Weird')
    else:
        print('Even number')

    # 170321: I NEED IT TO BREAK OUT OF FUNCTION IF IT MEETS ONE RULE?
    # 170321: DRAW FLOW CHART.
    # 170321: GO OVER PROBLEM SPEC AND INTENDED OUTPUT AGAIN. 
    # 170321: ONE ARGUMENT CAN MEET MORE THAN ONE RULE.

    # Rule 2: if n is even and in the inlcusive range of 2 to 5 print Not Weird
    if a in range(2,5) and even == 0: # (a%2) == 0: - replaced with even variable
        print('Not Weird')
    else:
        print('Outside of range')

    # Rule 3: if n is even and in the inclusive range of 6 to 20 print Weird
    if a in range(6,20) and even == 0: # (y%2) == 0: - replaced with even variable
        print('Weird')
    else:
        print('Outside of range')

    # Rule 4: if n is even and greater than 20 print Not Weird
    if a > 20 and (a%2) == 0:
        print('Not Weird')
    else:
        print('Number is less than 20 or odd')

main_combined(3) # 160321: DOES NOT WORK AS INTENDED. CHECKS AGAINST EACH RULE AND GIVES RELEVANT OUTPUT - out[3]: Weird
# main_combined(24) # out[24]: Not weird

--170321--
# step 6 | method 2
import math, os, random, re, sys

def main_combined(a):
    even = a%2

    # invalid input_constraint: 1 <= n <= 100
    if a <= 1 or a >= 100:
        print('Invalid input')
    
    '''
    # 170321: REMOVED ELSE STATEMENT SO NO OUTPUT IF VALID.
    else:
        print('Valid')
    '''

    # Rule 1: if n is odd print Weird
    # even = a%2
    if even != 0:
        print('Weird')
    else:
        print('Even number')

    # Rule 2: if n is even and in the inlcusive range of 2 to 5 print Not Weird
    if a in range(2,5) and even == 0: # (a%2) == 0: - replaced with even variable
        print('Not Weird')
    else:
        print('Outside of range')

    # Rule 3: if n is even and in the inclusive range of 6 to 20 print Weird
    if a in range(6,20) and even == 0: # (y%2) == 0: - replaced with even variable
        print('Weird')
    else:
        print('Outside of range')

    # Rule 4: if n is even and greater than 20 print Not Weird
    if a > 20 and (a%2) == 0:
        print('Not Weird')
    else:
        print('Number is less than 20 or odd')

main_combined(3) # 160321: DOES NOT WORK AS INTENDED. CHECKS AGAINST EACH RULE AND GIVES RELEVANT OUTPUT - out[3]: Weird
# main_combined(24) # out[24]: Not weird

--170321--
# step 6 | method 2
import math, os, random, re, sys

def main_combined(a):
    even = a%2

    # invalid input_constraint: 1 <= n <= 100
    if a <= 1 or a >= 100:
        print('Invalid input')
    else:
        print('Valid')

    # Rule 1: if n is odd print Weird
    # even = a%2
    if even != 0:
        print('Weird')
    else:
        print('Even number')

    # Rule 2: if n is even and in the inlcusive range of 2 to 5 print Not Weird
    if a in range(2,5) and even == 0: # (a%2) == 0: - replaced with even variable
        print('Not Weird')
    else:
        print('Outside of range')

    # Rule 3: if n is even and in the inclusive range of 6 to 20 print Weird
    if a in range(6,20) and even == 0: # (y%2) == 0: - replaced with even variable
        print('Weird')
    else:
        print('Outside of range')

    # Rule 4: if n is even and greater than 20 print Not Weird
    if a > 20 and (a%2) == 0:
        print('Not Weird')
    else:
        print('Number is less than 20 or odd')

main_combined(3) # 160321: DOES NOT WORK AS INTENDED. CHECKS AGAINST EACH RULE AND GIVES RELEVANT OUTPUT - out[3]: Weird
# main_combined(24) # out[24]: Not weird

--160321--
# Combine functions into one function
# Method 1: Call each function in main function
def main(n):
    # 160321: i don't think this will work bc the argument will get passed to each function and the operation will be performed accordingly.
    invalid(n)
    rule_one(n)
    rule_two(n)
    rule_three(n)
    rule_four(n)

main(3) # DOES NOT WORK AS INTENDED - out[3]: Weird
# 160321: As above, the argument is processed by each function and relevant output given.
# 160321: Need to make conditional so only one output is given.
# 160321: Will try method 2.

--110321--
def rule_one(w):
    if w != (w%2 == 0):
        print('Weird')
    else:
        print('This is an even number.')

rule_one(6) # works - out[6]: Weird
rule_one(7) # DOES NOT WORK: outputs Weird | SHOULD BE: out[7]: This is an even number.

def rule_one(w):
    if w != (w%2):
        print('Weird')
    else:
        print('This is an even number.')

rule_one(6) # works - out[6]: Weird
rule_one(7) # DOES NOT WORK: outputs Weird | SHOULD BE: out[7]: This is an even number.

--100321--
def rule_one(w):
    if w != w%2:
        print('Weird')
    else:
        print('This is an even number.')

rule_one(6) # works - out[6]: Weird
rule_one(7) # DOES NOT WORK: outputs Weird | SHOULD BE: out[7]: This is an even number.

def rule_one(w):
    even = w%2 == 0
    if w is not != even: # Invalid syntax error
        print('Weird')
    else:
        print('This is an even number.')

rule_one(6) # out[6]: Weird
rule_one(7) # out[7]: This is an even number.

def rule_one(w):
    even = w%2 == 0
    if w is not == even: # Invalid syntax error
        print('Weird')
    else:
        print('This is an even number.')

rule_one(6) # out[6]: Weird
rule_one(7) # out[7]: This is an even number.
